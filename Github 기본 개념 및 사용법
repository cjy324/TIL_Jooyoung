# Github 기본 개념 및 사용법(출처: Developer W님의 티스토리 https://mrw0119.tistory.com/120)

 1.Repository(저장소) 생성
  -하나의 저장소는 보통 하나의 프로젝트를 만들기 위해 사용됨
  -"+"버튼을 눌러 New repository 생성
  -이름, 간단한 설명, 공개여부 등 선택 후 생성
  
 2.Branch(브랜치) 생성
  -Branching은 하나의 저장소에서 서로 다른 버전을 동시에 작업하는 방법
  -기본적으로 저장소는 "master"라는 이름의 메인 브랜치를 가짐
  -"master"에 저장하기 전에 다른 브랜치를 만들어 "master"에 커밋하기 전에 수정하고 테스트를 진행함
  -"master"외의 브랜치가 생성되면 "master"의 카비 혹은 스냅샷이 생성됨
  -내가 새로운 브랜치를 작업하는 중에 다른 사람이 "master"브랜치를 수정하먄 나는 그 업데이트를 pull할 수 있음
  -협업시 개발자, 작가, 디자이너들은 각각의 브랜치를 만들어 작업을 하고 수정이 완료되면 "master"로 병합하는 방식........
  
 3.Commit(커밋) 
  -수정한 것을 최종적으로 저장소에 저장하는 하는 것을 커밋이라 함
  -각 커밋은 수정된 내용을 설명하는 각각의 커밋 메세지를 가짐
 
 4.Pull Request
  -깃허브 협업의 핵심
  -내가 풀요청을 하면 내가 수정한 내용이 동료들에게 제안되고, 동료들이 리뷰후 자신의 브랜치에 병합함
  
 5.Merge(병합)
  -Merge pull request 후 comfirm merge하면 병합이 완료됨
  -병합 후 필요없는 브랜치는 삭제

---------20.10.12 내용 추가---------
# Git 초기 설정

프로젝트 폴더에 git log폴더를 만드는 것? : git init
초기 git 사용자 설정: git config --global user.name "이름"
초기 git 사용자 설정:  git config --global user.email "메일주소"
git 저장소 연결: git remote add origin 주소
git 저장소 연결 현황보기: git remote -v
git 저장소 연결 초기화: git remote remove origin
git add 파일주소: 선택한 파일만 커밋(장바구니 담기)
모든 변경 항목 커밋(장바구니 담기): git add .
장바구니 초기화: git reset head:장바구니 초기화
git commt하기: git commt -m "파일명"
저장소에 git push하기: git push origin master
vim- vim: 편집기, 동작을 하려면 "a"
- 나가기: esc 
- 저장하지 않고 나가기: ":q!"
- 저장하고 나가기: "wq!"

# Github에서 데이터 가져오기
 1. STS 실행
 2. window -> perspective -> open perspective -> other -> 'Git'
 3. Git Repositories에서 빈공간에 우클릭 clone a git repositories
 4. URL에 가져올 git repositories 주소 붙여넣기
 5. workspace로 저장 위치 설정
 6. Git Repositories에서 가져온 저장소 우클릭 -> import Projects 클릭
