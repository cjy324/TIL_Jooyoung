1. 좋은코드란?
 - 읽기 쉬운 코드
 - 중복이 없는 코드
 - 테스트가 용이한 코드

2. 객체지향 프로그래밍이란?
 - OOP: Object Oriented Programming
 - 인간중심적 프로그래밍 패러다임
 장점
 - 이미 작성한 코드의 재사용성
 - 객체 단위 코드 덕분에 디버깅, 유지보수가 용이
 단점
 - 변수가 존재하고 이 변수가 객체를 예측할 수 없는 상태로 만듬
 - 변수가 예측할 수 없는 상태가 되버리면 내부에서 버그가 발생함
 
3. 객체 지향적 설계 5원칙
 - 단일책임의 원칙
 - 개방-폐쇄의 원칙
 - 리스코프 치환의 원칙
 - 인터페이스 분리의 원칙
 - 의존 역전의 원칙
 
4. RESTfull API
 - REST: 어떤 정보를 요청하고 응답하는 일종의 '형식', '형태'
 - RESTfull하게 작성한 API는 요청만 보더라도 대략 그 내용을 파악할 수 있음
 - 즉, HTTP 통신을 할 때 어떤 자원에 대해서 CRUD 요청을 보낼 때 Resource와 Methods로 구성한 특정한 형태(REST)로 전달하는 방식
 
5....6.

7. API
 - Application Programming Interface
 - 애플리케이션과 기기 간 원할한 통신을 하게 하는 중개자 역할, 소통창구

[자세히 보기](https://www.notion.so/21-04-28-05612d68cc714a33bfc281c1a316c879)
