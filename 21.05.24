- 코딩테스트 연습
- CS 공부(복습)

# 2. 객체 지향 프로그래밍(OOP; Object Oriented Programming) 정의

---

## 정의

- 인간 중심적 프로그래밍 패러다임
- **컴퓨터 프로그램을 명령어들의 모임으로 보는 시각에서 벗어나서 단위별 "객체"들의 모임으로 파악하는 인간 중심적인 프로그래밍 접근 방식**

### 장점

- 이미 작성한 코드에 대한 **재사용성이 높다.**
- 객체 단위로 코드가 나눠져 작성되기 때문에 **디버깅과 유지보수가 용이**하다.

### 단점

- 객체가 상태를 갖는다는 점
- 변수가 존재하고 이 변수를 통해 객체가 예측할 수 없는 상태를 갖게 되어 버림
- 변수가 예측할 수 없는 상태를 갖게되면 애플리케이션 내부에서 버그를 발생시킴
- 이러한 이유로 최근에는 함수형 패러다임이 주목 받고 있음

## 구성요소

### 클래스(Class)

- **객체를 정의해 놓는 것, 객체의 설계도, 틀**
- 클래스를 통해 객체를 생성하는 과정을 클래스의 인스턴스화라고 한다.
- **어떤 클래스로부터 만들어진 객체**를 그 **클래스의 인스턴스**라고 한다.

### 객체(Object)

- **클래스가 실제로 메모리상에 할당된 것, 즉 실제로 존재하는 클래스**
- **new()를 통해 객체를 생성(메모리에 할당)**

### 메서드(Method), 메시지(Message)

- **객체를 사용하는 방법,** 객체에 **명령을 내리는 메시지**

## 특징(추상화, 캡슐화(정보은닉), 상속, 다형성)

### 1. **추상화**

- **공통점을 찾아서 일반화하고 복잡한 구조를 단순화하는 것**

### 2. 캡슐화

- **정보은닉을 위해** 캡슐내부에 **중요 로직들은 감추고 외부에는 기능만을 제공**하는 것

### 3. **상속**

- 부모클래스의 **특징(변수, 메소드)을 자식클래스가 물려받는 것**
- **코드의 재사용성을 높여준다.**

### 4. **다형성**

- **똑같은 자료형**에 **여러 가지 객체를 대입할 수 있는 특징**을 의미
- **오버라이딩** : **부모 클래스로부터 상속받은 메소드를 자식 클래스에서 상황에 맞게 재정의하는 것**(메소드의 이름, 매개변수, 리턴 값이 모두 같아야 한다.)
- **오버로딩** : **메소드의 이름과 리턴 타입은 동일하지만 매개변수만 다른 메소드를 만드는 것**(메소드의 이름이 같고, 매개변수가 달라야 한다.)
