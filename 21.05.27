- CS공부

# String, StringBuffer, StringBuilder

---

## String

- String 클래스는 **불변**하기 때문에 문자열을 **수정하는 시점에 새로운 String 인스턴스가 생성**
- 메모리의 내용이 변하는게 아니라 새로운 String 인스턴스 생성
- String은 불변성을 가지기 때문에 **변하지 않는 문자열을 자주 읽어들이는 경우 String을 사용하면** 좋은 성능을 기대할 수 있다.

## StringBuffer, StringBuilder

- 가변성을 가지기 때문에 .append() .delete() 등의 API를 이용하여**동일 객체내에서 문자열을 변경**이 가능하다.
- 따라서 **문자열의 추가,수정,삭제가 빈번하게 발생할 경우**라면 String 클래스가 아닌 **StringBuffer/StringBuilder를 사용해야 한다.**
- StringBuffer와 StringBuilder의 가장 큰 차이점은 **동기화의 유무**로써 **StringBuffer**는 동기화 키워드를 지원하여**멀티쓰레드 환경에서 안전하다는 점(thread-safe)이다.**

즉, 

**String**                :  문자열 연산이 적고 멀티쓰레드 환경일 경우

**StringBuffer**    **** :  문자열 연산이 많고 멀티쓰레드 환경일 경우

**StringBuilder**   :  문자열 연산이 많고 단일쓰레드이거나 동기화를 고려하지 않아도 되는 경우

# GC(Garbage Collection)

---

- **더이상 heap에서 사용되지 않는 불필요한 메모리를 정리해주는 프로그램(JVM에 내장)**
- C/C++ 언어와 달리 자바는 개발자가 명시적으로 객체를 해제할 필요가 없습니다. 자바 언어의 큰 장점이기도 합니다. 사용하지 않는 객체는 메모리에서 삭제하는 작업을 Gargabe Collection(GC)라고 부르며 JVM에서 GC를 수행합니다.
- 가비지 컬렉션이라는 개념은 자바에서 처음 사용된 것이 아니다. LISP 라는 언어에서 처음 도입된 개념이다. 하지만, 자바가 가비지 컬렉션이란 개념을 더욱 대중화 시킨데 기여한 부분은 있다.

# 스크럼 개발 방법론

---

- 스크럼은 애자일 소프트웨어 개발 방법론의 종류중 하나로 반복적이고 점진적인 개발방법을 말한다.
- **각 반복주기가 종료될 때마다 부분적으로 완성된 결과물이 만들어진다.**
- 애자일에서는 반복주기를 이터레이션이라고 하지만 스크럼에서는 **반복주기를 스프린트(sprint)라고 하며 주로 1~4주로 구성된다.**
- 스크럼에는 제품 책임자, 스크럼 마스터와 개발팀이라는 3가지 역할이 있으며 이것들을 합쳐서 스크럼 팀이라고 부른다.
1. 제품 책임자(product owner) : 제품 백로그를 관리, 작성하고 이해관리자로부터 요구사항을 추출하여 제품 백로그에 반영한다. 요구사항에 우선 순위를 매기고 각 스프린트마다 우선순위를 관리, 조정한다.
2. 스크럼 마스터(servant leader) : 일반적인 프로젝트 관리자들과는 다르게 개발 팀원들을 코칭하고 개발팀이 프로젝트 진행중 문제가 생겼을 때 잘 해결할 수 있도록 도와주는 역할을 한다. 개발팀원들이나 스크럼에 참여하는 사람들이 스크럼을 제대로 알고 수행하고 있는지에 대한 책임을 가지며 스크럼의 이론, 규칙들을 잘 따르도록 보장해야한다.
3. 개발팀 : 고객으로부터 받은 요구사항을 가지고 제품을 개발, 테스트하는 팀으로 주로 5~7명으로 이루어진다. 개발팀에는 따로 리더가 정해져 있지 않으며, 팀원들이 자기 조직화(self-organization)되어 있어 외부의 명령 없이 스스로 스프린트 목표를 달성하기 위해 최상의 방법을 결정한다.
